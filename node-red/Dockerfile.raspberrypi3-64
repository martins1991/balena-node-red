###
# Build step
###
FROM balenalib/raspberrypi3-debian-node:18-bookworm-build as build
# FROM balenalib/raspberrypi3-debian-node:12-stretch-build as build

WORKDIR /usr/src/app
# COPY ./app/package.json package.json
# COPY ./app/package-lock.json package-lock.json

RUN JOBS=MAX npm install -g --production --unsafe-perm \
      node-red \
      node-red-contrib-balena \
      node-red-admin \
      node-red-dashboard \
      node-red-contrib-bigtimer \
      node-red-contrib-modbustcp \
      node-red-contrib-persist \
      node-red-contrib-bit \
      node-red-contrib-ds18b20 \
      node-red-node-pi-gpio \
      node-red-contrib-lcd20x4-i2c \
      node-red-node-email \
      node-red-contrib-moment \
      node-red-contrib-advanced-ping \
      node-red-contrib-influxdb \
    && npm install node-red-contrib-isonline \
      node-red-contrib-ui-time-scheduler \
    && JOBS=MAX npm install --unsafe-perm --production && npm cache clean --force

###
# Runtime image
###
FROM balenalib/raspberrypi3-debian-node:18-bookworm-run
# FROM balenalib/raspberrypi3-debian-node:12-stretch-build

RUN apt-get update && apt-get install -yq --no-install-recommends \
  rpi.gpio \
  python3-dev \
  python3-rpi.gpio \
  libatomic1 \
  git \
  openssh-client \
  && apt-get clean && rm -rf /var/lib/apt/lists/*

# Defines our working directory in container
WORKDIR /usr/src/app
    
# Copy over the files created in the previous step, including lib/, bin/
COPY --from=build /usr/local/bin /usr/local/bin
COPY --from=build /usr/local/lib/node_modules /usr/local/lib/node_modules
COPY --from=build /usr/src/app/node_modules /usr/src/app/node_modules
# COPY ./ssh_config /etc/ssh/ssh_config

# This will copy all files in our root to the working  directory in the container
COPY ./app ./

# server.js will run when container starts up on the device
# CMD ["bash", "/usr/src/app/start.sh"]

RUN mkdir /data
COPY timer-heizungspumpe.txt /data
COPY Betriebsparameter.json /data

# server.js will run when container starts up on the device
CMD modprobe i2c-dev && modprobe w1-gpio && modprobe w1-therm ; /bin/sh /usr/src/app/start.sh
